@model IEnumerable<Class>
@{
    ViewData["Title"] = "Manage Classes";
}

<div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-gradient-to-r from-red-600 to-pink-600 text-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex items-center justify-between">
                <div class="fade-in">
                    <nav class="flex items-center space-x-2 text-red-200 text-sm mb-2">
                        <a asp-action="Index" class="hover:text-white transition duration-200">Dashboard</a>
                        <i class="fas fa-chevron-right"></i>
                        <span class="text-white">Manage Classes</span>
                    </nav>
                    <h1 class="text-4xl font-bold mb-2">Class Management</h1>
                    <p class="text-red-100 text-lg">Create and organize classes and subjects for your institution</p>
                </div>
                <div class="text-8xl opacity-20">
                    <i class="fas fa-school"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Create Class Form -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8 fade-in">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                    <i class="fas fa-plus-circle text-green-500 mr-3"></i>Create New Class
                </h2>
                <button onclick="toggleCreateForm()" id="toggleBtn"
                        class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-200">
                    <i class="fas fa-plus mr-2"></i>Add Class
                </button>
            </div>

            <div id="createForm" class="hidden">
                <form asp-action="CreateClass" method="post" class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Class Name *</label>
                        <input type="text" name="name" required
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition duration-200"
                               placeholder="e.g., Grade 10, Class XII Science">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                        <input type="text" name="description"
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition duration-200"
                               placeholder="Brief description of the class">
                    </div>
                    <div class="md:col-span-2">
                        <button type="submit"
                                class="bg-gradient-to-r from-green-600 to-emerald-600 text-white px-6 py-3 rounded-lg hover:from-green-700 hover:to-emerald-700 transition duration-200 font-semibold">
                            <i class="fas fa-save mr-2"></i>Create Class
                        </button>
                        <button type="button" onclick="toggleCreateForm()"
                                class="ml-3 bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition duration-200">
                            <i class="fas fa-times mr-2"></i>Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Classes Grid -->
        @if (Model.Any())
        {
            <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8">
                @foreach (var classItem in Model)
                {
                    <div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden hover-lift fade-in border border-gray-200">
                        <!-- Class Header -->
                        <div class="bg-gradient-to-br from-blue-50 to-indigo-100 p-6 border-b border-blue-200">
                            <div class="flex items-start justify-between">
                                <div class="flex-grow">
                                    <h3 class="text-xl font-bold text-gray-900 mb-2">@classItem.Name</h3>
                                    @if (!string.IsNullOrEmpty(classItem.Description))
                                    {
                                        <p class="text-gray-600 text-sm mb-3">@classItem.Description</p>
                                    }
                                    <div class="flex items-center space-x-4 text-sm text-gray-500">
                                        <div class="flex items-center">
                                            <i class="fas fa-book mr-2 text-blue-500"></i>
                                            <span>@classItem.Subjects.Count subjects</span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-users mr-2 text-green-500"></i>
                                            <span>@classItem.StudentClasses.Count students</span>
                                        </div>
                                    </div>
                                </div>
                                <!-- Action Dropdown -->
                                <div class="relative" x-data="{ open: false }">
                                    <button @@click ="open = !open" class="p-2 text-gray-400 hover:text-gray-600 transition duration-200">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <div x-show="open" @@click.away ="open = false"
                                         x-transition:enter="transition ease-out duration-200"
                                         x-transition:enter-start="opacity-0 transform scale-95"
                                         x-transition:enter-end="opacity-100 transform scale-100"
                                         class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-1 z-20 border">
                                        <button onclick="editClass('@classItem.Id', '@classItem.Name', '@classItem.Description')"
                                                class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                            <i class="fas fa-edit mr-2"></i>Edit Class
                                        </button>
                                        <form asp-action="DeleteClass" method="post" class="inline w-full"
                                              onsubmit="return confirm('Are you sure you want to delete this class? This will also delete all subjects and content.')">
                                            <input type="hidden" name="id" value="@classItem.Id" />
                                            <button type="submit" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                                                <i class="fas fa-trash mr-2"></i>Delete Class
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Subjects Section -->
                        <div class="p-6">
                            <div class="flex items-center justify-between mb-4">
                                <h4 class="font-semibold text-gray-900">Subjects (@classItem.Subjects.Count)</h4>
                                <button onclick="showAddSubjectModal(@classItem.Id, '@classItem.Name')"
                                        class="bg-blue-100 text-blue-600 px-3 py-1 rounded-full text-sm hover:bg-blue-200 transition duration-200">
                                    <i class="fas fa-plus mr-1"></i>Add Subject
                                </button>
                            </div>

                            @if (classItem.Subjects.Any())
                            {
                                <div class="space-y-2 max-h-32 overflow-y-auto">
                                    @foreach (var subject in classItem.Subjects.Take(5))
                                    {
                                        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                            <div>
                                                <p class="font-medium text-gray-900 text-sm">@subject.Name</p>
                                                <p class="text-xs text-gray-500">@subject.Chapters.Count chapters</p>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs">
                                                    @subject.Chapters.Count ch
                                                </span>
                                            </div>
                                        </div>
                                    }
                                    @if (classItem.Subjects.Count > 5)
                                    {
                                        <div class="text-center">
                                            <a asp-action="Subjects" asp-route-classId="@classItem.Id"
                                               class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                                View all @classItem.Subjects.Count subjects <i class="fas fa-arrow-right ml-1"></i>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-6 text-gray-400">
                                    <i class="fas fa-book-open text-2xl mb-2"></i>
                                    <p class="text-sm">No subjects added yet</p>
                                </div>
                            }
                        </div>

                        <!-- Class Footer -->
                        <div class="px-6 pb-6">
                            <div class="flex items-center justify-between">
                                <span class="text-xs text-gray-500">
                                    Created @classItem.CreatedAt.ToString("MMM dd, yyyy")
                                </span>
                                <a asp-action="Subjects" asp-route-classId="@classItem.Id"
                                   class="bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-indigo-700 transition duration-200 text-sm font-medium">
                                    <i class="fas fa-cog mr-2"></i>Manage
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="bg-white rounded-xl shadow-lg p-12 text-center">
                <i class="fas fa-school text-8xl text-gray-300 mb-6"></i>
                <h3 class="text-2xl font-semibold text-gray-500 mb-4">No Classes Created</h3>
                <p class="text-gray-400 mb-8 max-w-md mx-auto">
                    Start by creating your first class. Classes help organize subjects and students in your e-learning platform.
                </p>
                <button onclick="toggleCreateForm()"
                        class="bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-8 py-4 rounded-lg hover:from-blue-700 hover:to-indigo-700 transition duration-200 font-semibold">
                    <i class="fas fa-plus mr-2"></i>Create Your First Class
                </button>
            </div>
        }
    </div>

    <!-- Add Subject Modal -->
    <div id="addSubjectModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-xl p-8 max-w-md w-full mx-4">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-xl font-bold text-gray-900">Add Subject</h3>
                <button onclick="closeAddSubjectModal()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>

            <form asp-action="CreateSubject" method="post">
                <input type="hidden" id="subjectClassId" name="classId" />

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Class</label>
                    <input type="text" id="subjectClassName" readonly
                           class="w-full px-4 py-3 bg-gray-100 border border-gray-300 rounded-lg text-gray-600">
                </div>

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Subject Name *</label>
                    <input type="text" name="name" required
                           class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200"
                           placeholder="e.g., Mathematics, Physics, English">
                </div>

                <div class="mb-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                    <textarea name="description" rows="3"
                              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition duration-200"
                              placeholder="Brief description of the subject"></textarea>
                </div>

                <div class="flex items-center justify-end space-x-3">
                    <button type="button" onclick="closeAddSubjectModal()"
                            class="bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition duration-200">
                        Cancel
                    </button>
                    <button type="submit"
                            class="bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-6 py-2 rounded-lg hover:from-blue-700 hover:to-indigo-700 transition duration-200">
                        <i class="fas fa-plus mr-2"></i>Add Subject
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toggle create form
        function toggleCreateForm() {
            const form = document.getElementById('createForm');
            const btn = document.getElementById('toggleBtn');

            if (form.classList.contains('hidden')) {
                form.classList.remove('hidden');
                form.classList.add('fade-in');
                btn.innerHTML = '<i class="fas fa-times mr-2"></i>Cancel';
                btn.className = 'bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition duration-200';
            } else {
                form.classList.add('hidden');
                btn.innerHTML = '<i class="fas fa-plus mr-2"></i>Add Class';
                btn.className = 'bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-200';
            }
        }

        // Show add subject modal
        function showAddSubjectModal(classId, className) {
            document.getElementById('subjectClassId').value = classId;
            document.getElementById('subjectClassName').value = className;
            document.getElementById('addSubjectModal').classList.remove('hidden');
        }

        // Close add subject modal
        function closeAddSubjectModal() {
            document.getElementById('addSubjectModal').classList.add('hidden');
            // Reset form
            document.querySelector('#addSubjectModal form').reset();
        }

        // Edit class function (placeholder)
        function editClass(classId, className, classDescription) {
            alert('Edit functionality would open a modal to edit: ' + className);
        }

        // Add fade-in animations
        const fadeElements = document.querySelectorAll('.fade-in');
        fadeElements.forEach((el, index) => {
            el.style.opacity = '0';
            el.style.transform = 'translateY(30px)';
            el.style.transition = 'all 0.6s ease-out';

            setTimeout(() => {
                el.style.opacity = '1';
                el.style.transform = 'translateY(0)';
            }, index * 150);
        });

        // Close modal when clicking outside
        document.getElementById('addSubjectModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeAddSubjectModal();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeAddSubjectModal();
            }
        });
    </script>
}