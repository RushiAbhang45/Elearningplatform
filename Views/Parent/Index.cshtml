@model IEnumerable<ApplicationUser>
@{
    ViewData["Title"] = "Parent Dashboard";
}

<div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-gradient-to-r from-purple-600 to-pink-600 text-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex items-center justify-between">
                <div class="fade-in">
                    <h1 class="text-4xl font-bold mb-2">Parent Dashboard 👨‍👩‍👧‍👦</h1>
                    <p class="text-purple-100 text-lg">Monitor your child's educational journey and stay connected</p>
                </div>
                <div class="text-8xl opacity-20">
                    <i class="fas fa-users"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Link Child Section -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8 fade-in">
            <div class="flex items-center justify-between mb-6">
                <div>
                    <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                        <i class="fas fa-link text-blue-500 mr-3"></i>Link Child Account
                    </h2>
                    <p class="text-gray-600 mt-2">Connect with your child's account to monitor their progress</p>
                </div>
                <div class="hidden md:block">
                    <i class="fas fa-user-plus text-4xl text-blue-200"></i>
                </div>
            </div>
            
            <form asp-action="LinkChild" method="post" class="flex flex-col sm:flex-row gap-4">
                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Child's Email Address</label>
                    <input name="childEmail" type="email" required
                           class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition duration-200"
                           placeholder="Enter your child's registered email address">
                </div>
                <div class="sm:flex-shrink-0 sm:self-end">
                    <button type="submit" 
                            class="w-full sm:w-auto bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-3 rounded-lg hover:from-purple-700 hover:to-pink-700 transition duration-200 font-medium">
                        <i class="fas fa-plus mr-2"></i>Link Child
                    </button>
                </div>
            </form>
            
            <div class="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
                <div class="flex items-start">
                    <i class="fas fa-info-circle text-blue-500 mt-1 mr-3 flex-shrink-0"></i>
                    <div class="text-sm text-blue-700">
                        <p class="font-medium mb-1">How to link your child:</p>
                        <ul class="space-y-1">
                            <li>• Ask your child for their registered email address</li>
                            <li>• Enter the email exactly as they registered</li>
                            <li>• You'll get instant access to their progress reports</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Children Overview -->
        <div class="bg-white rounded-xl shadow-lg p-6 fade-in">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                    <i class="fas fa-child text-green-500 mr-3"></i>My Children (@Model.Count())
                </h2>
                @if (Model.Any())
                {
                    <div class="text-sm text-gray-500">
                        <i class="fas fa-chart-line mr-1"></i>Overall performance tracking
                    </div>
                }
            </div>

            @if (Model.Any())
            {
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var child in ViewBag.ChildrenSummary)
                    {
                        <div class="bg-gradient-to-br from-purple-50 to-pink-100 rounded-xl p-6 hover:shadow-xl transition-all duration-300 border border-purple-200 hover:border-purple-300 hover-lift">
                            <!-- Child Header -->
                            <div class="text-center mb-6">
                                <div class="w-20 h-20 bg-purple-200 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <i class="fas fa-user-circle text-4xl text-purple-600"></i>
                                </div>
                                <h3 class="text-xl font-bold text-gray-900 mb-1">@child.Child.FullName</h3>
                                <p class="text-gray-600 text-sm">@child.Child.Email</p>
                            </div>

                            <!-- Progress Stats -->
                            <div class="space-y-4 mb-6">
                                <!-- Overall Progress -->
                                <div>
                                    <div class="flex items-center justify-between mb-2">
                                        <span class="text-sm font-medium text-gray-700">Overall Progress</span>
                                        <span class="text-sm font-bold text-purple-600">@child.OverallProgress.ToString("F0")%</span>
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-3">
                                        <div class="bg-gradient-to-r from-purple-500 to-pink-500 h-3 rounded-full transition-all duration-1000 ease-out" 
                                             style="width: @child.OverallProgress.ToString("F0")%"></div>
                                    </div>
                                </div>

                                <!-- Quick Stats Grid -->
                                <div class="grid grid-cols-2 gap-4">
                                    <div class="bg-white rounded-lg p-3 text-center">
                                        <div class="text-2xl font-bold text-blue-600">@child.RecentQuizzesCount</div>
                                        <div class="text-xs text-gray-500">Quizzes Taken</div>
                                    </div>
                                    <div class="bg-white rounded-lg p-3 text-center">
                                        <div class="text-2xl font-bold text-green-600">@child.AverageQuizScore.ToString("F0")%</div>
                                        <div class="text-xs text-gray-500">Avg Score</div>
                                    </div>
                                </div>
                            </div>

                            <!-- Performance Indicator -->
                            <div class="mb-6">
                                @if (child.OverallProgress >= 80)
                                {
                                    <div class="bg-green-100 text-green-800 px-3 py-2 rounded-lg text-center text-sm font-medium">
                                        <i class="fas fa-star mr-1"></i>Excellent Performance!
                                    </div>
                                }
                                else if (child.OverallProgress >= 60)
                                {
                                    <div class="bg-blue-100 text-blue-800 px-3 py-2 rounded-lg text-center text-sm font-medium">
                                        <i class="fas fa-thumbs-up mr-1"></i>Good Progress
                                    </div>
                                }
                                else if (child.OverallProgress >= 30)
                                {
                                    <div class="bg-yellow-100 text-yellow-800 px-3 py-2 rounded-lg text-center text-sm font-medium">
                                        <i class="fas fa-clock mr-1"></i>Needs Encouragement
                                    </div>
                                }
                                else
                                {
                                    <div class="bg-red-100 text-red-800 px-3 py-2 rounded-lg text-center text-sm font-medium">
                                        <i class="fas fa-exclamation-triangle mr-1"></i>Needs Attention
                                    </div>
                                }
                            </div>

                            <!-- Action Buttons -->
                            <div class="space-y-2">
                                <a asp-action="ChildProgress" asp-route-childId="@child.Child.Id" 
                                   class="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 rounded-lg hover:from-purple-700 hover:to-pink-700 transition duration-200 block text-center font-medium">
                                    <i class="fas fa-chart-line mr-2"></i>View Detailed Progress
                                </a>
                                
                                <div class="grid grid-cols-2 gap-2">
                                    <a asp-action="ChildNotices" asp-route-childId="@child.Child.Id" 
                                       class="bg-blue-100 text-blue-700 py-2 px-3 rounded-lg hover:bg-blue-200 transition duration-200 text-center text-sm font-medium">
                                        <i class="fas fa-bell mr-1"></i>Notices
                                    </a>
                                    <a asp-action="QuizPerformance" asp-route-childId="@child.Child.Id" 
                                       class="bg-green-100 text-green-700 py-2 px-3 rounded-lg hover:bg-green-200 transition duration-200 text-center text-sm font-medium">
                                        <i class="fas fa-chart-bar mr-1"></i>Quizzes
                                    </a>
                                </div>
                                
                                <!-- Unlink Option -->
                                <form asp-action="UnlinkChild" method="post" class="mt-3" 
                                      onsubmit="return confirm('Are you sure you want to unlink @child.Child.FullName?')">
                                    <input type="hidden" name="childId" value="@child.Child.Id" />
                                    <button type="submit" 
                                            class="w-full bg-gray-100 text-gray-600 py-2 px-4 rounded-lg hover:bg-gray-200 transition duration-200 text-sm">
                                        <i class="fas fa-unlink mr-2"></i>Unlink Child
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <!-- Empty State -->
                <div class="text-center py-16">
                    <div class="max-w-md mx-auto">
                        <i class="fas fa-users text-8xl text-gray-300 mb-6"></i>
                        <h3 class="text-2xl font-semibold text-gray-500 mb-4">No Children Linked Yet</h3>
                        <p class="text-gray-400 mb-8">Link your child's account to start monitoring their educational progress and performance.</p>
                        
                        <div class="bg-purple-50 border border-purple-200 rounded-xl p-6">
                            <h4 class="text-lg font-semibold text-purple-800 mb-3">
                                <i class="fas fa-rocket mr-2"></i>Get Started in 3 Steps:
                            </h4>
                            <div class="space-y-3 text-left">
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-purple-600 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3 mt-0.5">1</div>
                                    <div>
                                        <p class="font-medium text-purple-800">Get your child's email</p>
                                        <p class="text-sm text-purple-600">Ask them for their registered email address</p>
                                    </div>
                                </div>
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-purple-600 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3 mt-0.5">2</div>
                                    <div>
                                        <p class="font-medium text-purple-800">Link the account</p>
                                        <p class="text-sm text-purple-600">Use the form above to connect</p>
                                    </div>
                                </div>
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-purple-600 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3 mt-0.5">3</div>
                                    <div>
                                        <p class="font-medium text-purple-800">Monitor progress</p>
                                        <p class="text-sm text-purple-600">Track learning and receive updates</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add fade-in animations
          const fadeElements = document.querySelectorAll('.fade-in');
          fadeElements.forEach((el, index) => {
              el.style.opacity = '0';
              el.style.transform = 'translateY(30px)';
              el.style.transition = 'all 0.6s ease-out';

              setTimeout(() => {
                  el.style.opacity = '1';
                  el.style.transform = 'translateY(0)';
              }, index * 200);
          });
          // Animate progress bars on scroll
        const progressObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const progressBars = entry.target.querySelectorAll('[style*="width:"]');
                    progressBars.forEach(bar => {
                        const width = bar.style.width;
                        bar.style.width = '0%';
                        setTimeout(() => {
                            bar.style.width = width;
                        }, 300);
                    });
                }
            });
        }, { threshold: 0.3 });
        // Observe all child cards for progress animation
        document.querySelectorAll('.hover-lift').forEach(card => {
            progressObserver.observe(card);
        });

        // Add hover effects
         const hoverElements = document.querySelectorAll('.hover-lift');
         hoverElements.forEach(el => {
             el.addEventListener('mouseenter', () => {
                 el.style.transform = 'translateY(-4px) scale(1.02)';
             });
             el.addEventListener('mouseleave', () => {
                 el.style.transform = 'translateY(0) scale(1)';
             });
         });
           // Form validation enhancement
        const linkForm = document.querySelector('form[action*="LinkChild"]');
        if (linkForm) {

            linkForm.addEventListener('submit', function(e) {

                const email = this.querySelector('input[name="childEmail"]').value;
                if (!email.includes('@@')) {

                    e.preventDefault();
                    alert('Please enter a valid email address');
                    return;
                }
                
                // Show loading state
                const button = this.querySelector('button[type="submit"]');
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Linking...';
                button.disabled = true;
                
                // Re-enable if there's an error (form will redirect on success)
                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.disabled = false;
                }, 5000);
            });
        }
                
                 


    </script>
}